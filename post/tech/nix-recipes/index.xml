<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nix recipes on wilspi | Sourabh</title>
    <link>https://wilspi.com/post/tech/nix-recipes/</link>
    <description>Recent content in nix recipes on wilspi | Sourabh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Mar 2020 21:00:00 +0530</lastBuildDate><atom:link href="https://wilspi.com/post/tech/nix-recipes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nix Recipe: Setup Python</title>
      <link>https://wilspi.com/post/tech/nix-recipes/python/</link>
      <pubDate>Mon, 09 Mar 2020 21:00:00 +0530</pubDate>
      
      <guid>https://wilspi.com/post/tech/nix-recipes/python/</guid>
      <description>This is a nix recipe for building and running python in a virtual nix environment.
  Create shell.nix with following:
let nixpkgs = import (builtins.fetchTarball https://github.com/NixOS/nixpkgs/archive/20.03.tar.gz) { overlays = []; config = {}; }; in with nixpkgs; stdenv.mkDerivation { name = &amp;#34;python-env&amp;#34;; nativeBuildInputs = [ zsh vim python37 python37Packages.pip python37Packages.virtualenv ]; # ENV variables PROJDIR = &amp;#34;${toString ./.}&amp;#34;; # Post Shell Hook shellHook = &amp;#39;&amp;#39; echo &amp;#34;Using ${python37.name}&amp;#34; [ !</description>
    </item>
    
    <item>
      <title>Nix Recipe: Setup Nodejs</title>
      <link>https://wilspi.com/post/tech/nix-recipes/nodejs/</link>
      <pubDate>Fri, 06 Mar 2020 22:00:00 +0530</pubDate>
      
      <guid>https://wilspi.com/post/tech/nix-recipes/nodejs/</guid>
      <description>This is a nix recipe for building and running nodejs in a virtual nix environment.
  In your project folder, create a new file nodejs.nix and add following:
{ nixpkgs ? import &amp;lt;nixpkgs&amp;gt; {}, version, sha256 }: let inherit (nixpkgs) python37 utillinux stdenv autoPatchelfHook fetchurl binutils-unwrapped patchelf xcbuild; inherit (stdenv) mkDerivation; in mkDerivation { inherit version; name = &amp;#34;nodejs-${version}&amp;#34;; src = fetchurl { url = &amp;#34;https://nodejs.org/dist/v${version}/node-v${version}${if stdenv.isDarwin then &amp;#34;-darwin-x64&amp;#34; else &amp;#34;-linux-x64&amp;#34;}.</description>
    </item>
    
    <item>
      <title>Nix Recipe: Setup Rust</title>
      <link>https://wilspi.com/post/tech/nix-recipes/rust/</link>
      <pubDate>Wed, 04 Mar 2020 22:00:00 +0530</pubDate>
      
      <guid>https://wilspi.com/post/tech/nix-recipes/rust/</guid>
      <description>This is a nix recipe for building and running rust in a virtual nix environment.
  Create a file rust-toolchain with following:
1.43.0 We are specifying rust version to install, here using 1.43.0. If using heroku, rust-toolchain file will determine which version will be used to build the application.
  Create shell.nix with following:
let # Mozilla Overlay moz_overlay = import ( builtins.fetchTarball &amp;#34;https://github.com/mozilla/nixpkgs-mozilla/archive/master.tar.gz&amp;#34; ); nixpkgs = import (builtins.</description>
    </item>
    
    <item>
      <title>Nix Recipe: Setup Postgresql</title>
      <link>https://wilspi.com/post/tech/nix-recipes/postgresql/</link>
      <pubDate>Mon, 02 Mar 2020 22:00:00 +0530</pubDate>
      
      <guid>https://wilspi.com/post/tech/nix-recipes/postgresql/</guid>
      <description>This is a nix recipe for building and running postgresql-12 in a virtual nix environment.
  Create your project folder and save the following file as shell.nix
let nixpkgs = import (builtins.fetchTarball https://github.com/NixOS/nixpkgs/archive/20.03.tar.gz) { overlays = []; config = {}; }; in with nixpkgs; stdenv.mkDerivation { name = &amp;#34;postgres-env&amp;#34;; buildInputs = []; nativeBuildInputs = [ zsh vim geos gdal nixpkgs-fmt # postgres-12 with postgis support (postgresql_12.withPackages (p: [ p.postgis ])) ]; postgresConf = writeText &amp;#34;postgresql.</description>
    </item>
    
  </channel>
</rss>
