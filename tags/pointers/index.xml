<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pointers on Sourabh Deokar</title>
    <link>https://wilspi.com/tags/pointers/</link>
    <description>Recent content in pointers on Sourabh Deokar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://wilspi.com/tags/pointers/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rust: Smart Pointers</title>
      <link>https://wilspi.com/post/tech/rust-smart-pointers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wilspi.com/post/tech/rust-smart-pointers/</guid>
      <description>This is in DRAFT mode.
Pointer is a general concept in Computer Programming for a variable that stores memory address. In Rust, generally we use references to access the value stored at a memory address. References are very simple pointers, that works with the limits of Rust&amp;rsquo;s ownership and borrowing concept. Lets look at other types to expand these limits.
Note: These are quick short notes, if you want to look in deep check out rustlang docs.</description>
    </item>
    
  </channel>
</rss>